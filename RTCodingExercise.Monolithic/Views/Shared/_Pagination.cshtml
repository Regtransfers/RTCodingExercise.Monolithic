@using RTCodingExercise.Monolithic.Utilities
@model RTCodingExercise.Monolithic.Common.Models.PaginatedList<RTCodingExercise.Monolithic.Common.Models.Plate>

<ul class="pagination">
    
    @{
        var allParams = @QueryParameters.ToDictionary(Context.Request);
        
        if (Model.PageIndex != 1)
        {
            allParams.AddOrReplace("page", "1");
            <li class="page-item">
                <a class="page-link" asp-all-route-data="allParams">First</a>
            </li>    
        }
        
        if (Model.HasPreviousPage)
        {
            allParams.AddOrReplace("page", (Model.PageIndex-1).ToString());
            <li class="page-item">
                <a class="page-link" asp-all-route-data="allParams">Previous</a>
            </li>
        }
    }
    
    @{
        for (var i = 1; i <= Model.TotalPages; i++)
        {
            allParams.AddOrReplace("page", i.ToString());
            <li class="page-item @(Model.PageIndex == i ? "active": "")"><a class="page-link" asp-all-route-data="allParams">@i</a></li>        
        }
    }
    
    @{
        if (Model.HasNextPage)
        {
            allParams.AddOrReplace("page", (Model.PageIndex+1).ToString());
            <li class="page-item">
                <a class="page-link" asp-all-route-data="allParams">Next</a>
            </li>
        }
    }
    
    @{
        if (Model.PageIndex != Model.TotalPages)
        {
            allParams.AddOrReplace("page", Model.TotalPages.ToString());
            <li class="page-item">
                <a class="page-link" asp-all-route-data="allParams">Last</a>
            </li>    
        }
    }
</ul>